{"version":3,"sources":["layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","pages/About.js","App.js","index.js"],"names":["headerStyle","backgroundColor","color","textAlign","fontSize","padding","linkStyle","textDecoration","margin","Header","style","paddingBottom","to","TodoItem","getDivStyle","background","borderColor","borderStyle","borderWidth","display","flexDirection","justifyContent","alignContent","getPStyle","marginLeft","marginTop","props","todo","completed","this","title","id","type","onChange","toggleComplete","bind","cursor","onClick","deleteTodo","className","React","Component","Todos","todos","map","key","AddTodo","state","textInputHandler","e","setState","target","name","value","formSubmitHandler","preventDefault","onSubmit","formStyle","flex","placeholder","required","border","borderTop","aboutDivStyle","lineHeight","About","App","axios","delete","then","res","filter","post","uuid","v4","newTodo","data","get","exact","path","render","Fragment","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.69c84624.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            <h1 style={{paddingBottom: '5px'}}>To-Do List</h1>\n            <Link to=\"/\" style={linkStyle}>Home</Link>\n            |\n            <Link to=\"/about\" style={linkStyle}>About</Link>\n        </header>\n    );\n}\n\nconst headerStyle = {\n    backgroundColor: 'var(--black)',\n    color: 'var(--white)',\n    textAlign: 'center',\n    fontSize: '.8em',\n    padding: '10px',\n}\n\nconst linkStyle = {\n    color: 'var(--white)',\n    textDecoration: 'none',\n    margin: '10px'\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n    getDivStyle = () => {\n        return {\n            background: 'var(--dark-blue)',\n            padding: '10px',\n            borderColor: 'var(--black)',\n            borderStyle: 'solid',\n            borderWidth: '0px 1px 1px 1px',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'start',\n            alignContent: 'center'\n        }\n    }\n\n    getPStyle = () => {\n        return {\n            color: 'var(--white)',\n            marginLeft: '10px',\n            marginTop: '3px',\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none',\n        }\n    }\n\n    render() {\n        const {title, id} = this.props.todo;\n        return (\n            <div style={this.getDivStyle()}>\n                <input \n                    type=\"checkbox\" \n                    onChange={this.props.toggleComplete.bind(this, id)} \n                    style={{marginTop: '5px', cursor: 'pointer'}} \n                />\n                <p style={this.getPStyle()}>{title}</p>\n                <button \n                    onClick={this.props.deleteTodo.bind(this, id)} \n                    className=\"delete-btn\"\n                >\n                    Delete\n                </button>\n            </div> \n        );\n    }\n}\n\n//PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    toggleComplete: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired\n}\n\nexport default TodoItem;","import React from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends React.Component {\n    render() {\n        return this.props.todos.map(\n            (todo) => (\n                <TodoItem key={todo.id} todo={todo} toggleComplete={this.props.toggleComplete}\n                    deleteTodo={this.props.deleteTodo} \n                />\n            )\n        );\n    }\n}\n\n//PropTypes\nTodos.propTypes = {\n    todos: PropTypes.array.isRequired,\n    toggleComplete: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired\n}\n\nexport default Todos;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddTodo extends React.Component {\n    \n    state = {\n        title: ''\n    }\n\n    textInputHandler = (e) => this.setState(\n        {\n            [e.target.name]: e.target.value\n        }\n    );\n\n    formSubmitHandler = (e) => {\n        e.preventDefault();\n        this.props.formSubmitHandler(this.state.title);\n        this.setState({title: ''});\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.formSubmitHandler} style={formStyle}>\n                <input \n                    type=\"text\" \n                    name=\"title\"\n                    style={{flex: '10', padding: '5px'}} \n                    placeholder=\"Add it to the list...\"\n                    value={this.state.title}\n                    onChange={this.textInputHandler}\n                    required\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Add\"\n                    className=\"add-btn\"\n                />\n            </form>\n        );\n    }\n}\n\nconst formStyle = {\n    display: 'flex', \n    border: '1px solid var(--black)',\n    borderTop: 'none'\n}\n\n//PropTypes\nAddTodo.propTypes = {\n    formSubmitHandler: PropTypes.func.isRequired\n}\n\nexport default AddTodo;","import React from 'react';\n\nfunction About() {\n    return (\n        <div style={aboutDivStyle}>\n            <h2>About</h2>\n            <p> A simple to-do app built using the React framework. <br/>\n                Author: Dylan Cruse\n            </p>\n        </div>\n    );\n}\n\nconst aboutDivStyle = {\n    backgroundColor: 'var(--dark-blue)',\n    color: 'var(--white)',\n    textAlign: 'center',\n    lineHeight: '1.4',\n    padding: '10px',\n    border: '1px solid var(--black)'\n}\n\nexport default About;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './pages/About';\nimport './App.css';\n\nimport uuid from 'uuid';\nimport axios from 'axios';\n\nclass App extends React.Component {\n    state = {\n        todos: []\n    }\n\n    componentDidMount() {\n        axios.get('https://jsonplaceholder.typicode.com/users/1/todos?_limit=5')\n            .then(res => this.setState(\n                    {       \n                        todos: res.data\n                    }\n                )\n            )\n    }\n\n    toggleComplete = (id) => {\n        this.setState(\n            {\n                todos: this.state.todos.map(\n                    (todo) => {\n                        if(todo.id === id) {\n                            todo.completed = !todo.completed\n                        }\n                        return todo;\n                    }\n                )\n            }\n        );\n    }\n\n    deleteTodo = (id) => {\n        axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n            .then(res => this.setState(\n                {\n                    todos: [...this.state.todos.filter(\n                        todo => todo.id !== id\n                        )\n                    ]\n                }\n            ))\n    }\n\n    //Create new todo\n    formSubmitHandler = (title) => {\n        axios.post('https://jsonplaceholder.typicode.com/todos', {\n                key: uuid.v4(),\n                title,\n                completed: false\n            }\n        )\n        .then(res => {\n                const newTodo = {\n                    id: uuid.v4(),\n                    title: res.data.title,\n                    completed: res.data.completed\n                }\n                this.setState(\n                    {\n                        todos: [...this.state.todos, newTodo]\n                    }\n                )\n            }\n        )\n    }\n\n    render() {\n        return (\n            <Router>\n                <div id=\"App-wrapper\">\n                        <div className=\"App\">\n                            <Header />\n\n                            <Route exact path=\"/\" render={props => (\n                                <React.Fragment>\n                                    <Todos todos={this.state.todos} toggleComplete={this.toggleComplete} \n                                    deleteTodo={this.deleteTodo} />\n                                    <AddTodo formSubmitHandler={this.formSubmitHandler}/>\n                                </React.Fragment>\n                            )}>\n                            </Route>\n\n                            <Route path=\"/about\" component={About}></Route>\n                        </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}